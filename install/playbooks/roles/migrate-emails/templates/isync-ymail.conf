# Global parameters
Expunge None
BufferLimit 64m

# The remote IMAP account for {{ account.name }}
IMAPAccount remote
Host imap.mail.yahoo.com
User {{ account['user'] }}
Pass "{{ account['password'] }}"
SSLType IMAPS
CertificateFile /etc/ssl/certs/ca-certificates.crt

# Remote store. Use a prefix using 'Path' if needed
IMAPStore remote
Account remote

# The local mail store
IMAPAccount local
Host imap.{{ network.domain }}
User {{ user.uid }}
Pass "{{ user.password }}"

# The local mail store
IMAPStore local
Account local

# Import messages channel:
# Import all messages, and keep the folders hierachy
Channel default
Master :remote:
Slave :local:
Create Slave
Patterns "*"
Patterns !"Bulk Mail"
Patterns !"Archive"
Patterns !"Trash"
Patterns !"Draft"
CopyArrivalDate yes
Sync Pull
MaxMessages {{ account['max_messages'] | default(0) }}
SyncState ~/mails/import/.{{ account.name }}-mbsync/

{% if account.get_junk | default(false) %}
# Junk
Channel junk
Master :remote:"Bulk Mail"
Slave :local:Junk
Patterns *
Sync Pull
Create Slave
SyncState ~/mails/import/.{{ account.name }}-mbsync/
{% endif %}

{% if account.get_trash | default(false) %}
# Trash
Channel trash
Master :remote:Trash
Slave :local:Trash
Patterns *
Sync Pull
Create Slave
SyncState ~/mails/import/.{{ account.name }}-mbsync/
{% endif %}

# Archived emails
Channel archive
Master :remote:Archive
Slave :local:Archives
Patterns *
Sync Pull
Create Slave
SyncState ~/mails/import/.{{ account.name }}-mbsync/

# Draft emails
Channel draft
Master :remote:Draft
Slave :local:Drafts
Patterns *
Sync Pull
Create Slave
SyncState ~/mails/import/.{{ account.name }}-mbsync/
