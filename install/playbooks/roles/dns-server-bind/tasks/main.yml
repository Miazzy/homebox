---

- name: Install a DNS server
  apt:
    name: bind9
    state: present

- name: Build the reverse IP address (works only for IPv4)
  when: bind.reverse_ip == "auto"
  tags: facts
  set_fact:
    ip_regex: '([0-9]+)\.([0-9]+)\.([0-9]+)\.([0-9]+)'

- name: Build the reverse IP address (works only for IPv4)
  when: bind.reverse_ip == "auto"
  tags: facts
  set_fact:
    reverse_ip: '{{ external_ip | regex_replace(ip_regex, "\3.\2.\1") }}'

- name: Build the reverse IP address
  when: bind.reverse_ip == "auto"
  tags: facts
  set_fact:
    reverse_ip: bind.reverse_ip

- name: Copy the configuration template
  vars:
    serial: "{{ lookup('pipe', 'date +%s') }}"
  template:
    src: '{{ file.src }}'
    dest: '{{ file.dest }}'
  with_items:
    - src: forward-head
      dest: '/etc/homebox/dns-entries.d/00-head.bind'
    - src: named.conf.options
      dest: '/etc/bind/named.conf.options'
    - src: named.conf.local
      dest: '/etc/bind/named.conf.local'
    - src: reverse-domain
      dest: '/etc/bind/reverse.{{ network.domain }}'
  loop_control:
    loop_var: file

- name: Build the final bind configuration
  assemble:
    src: '/etc/homebox/dns-entries.d/'
    dest: '/etc/bind/forward.{{ network.domain }}'
    delimiter: '\n'
    regexp: '^.*\.bind$'

- name: Create the folder for the keys
  register: keys_dir
  tags: encryption
  file:
    path: '{{ path }}'
    state: directory
    mode: '0750'
    owner: root
    group: bind
  with_items:
    - /etc/bind/keys
    - /etc/bind/keys/tests
  loop_control:
    loop_var: path

- name: If the DKIM have been generated before, copy them on the remote server
  tags: backup-push
  synchronize:
    src: '{{ playbook_dir }}/../../backup/dnssec-keys/'
    dest: '/etc/bind/keys/'
    mode: push
    owner: no
    group: no
    perms: yes
    rsync_opts:
      - '--no-motd'
      - '--checksum'
      - '--ignore-existing'
      - '--update'

- name: Generate the main key
  when: keys_dir.changed
  tags: encryption
  register: main_key_facts
  shell: >-
    dnssec-keygen -q -a {{ bind.dnssec.algo }} -b 1024 {{ network.domain }}
  args:
    chdir: /etc/bind/keys

- name: Set the permissions on the key file generated
  when: keys_dir.changed
  file:
    path: '/etc/bind/keys/{{ main_key_facts.stdout }}.private'
    group: bind
    mode: g+r

- name: Generate the second key (key signing key)
  when: keys_dir.changed
  register: ksk_facts
  tags: encryption
  shell: >-
    dnssec-keygen -q -a {{ bind.dnssec.algo }} -f KSK -b 2048 {{ network.domain }}
  args:
    chdir: /etc/bind/keys

- name: Copy the KSK for testing
  when: keys_dir.changed
  file:
    src: '/etc/bind/keys/{{ ksk_facts.stdout }}.key'
    dest: /etc/bind/keys/tests/ksk.key
    state: link

- name: Create the testing key
  when: keys_dir.changed
  shell: >-
    cat /etc/bind/keys/tests/ksk.key
    | sed '/^;/d'
    | sed 's/IN DNSKEY 257 3 8 /257 3 8 "/'
    | sed 's/^/trusted-keys { /'
    | sed 's/$/"; };/'
    > /etc/bind/keys/tests/testing.key
  args:
    creates: /etc/bind/keys/tests/testing.key

- name: Set the permissions on the KSK file generated
  when: keys_dir.changed
  file:
    path: '/etc/bind/keys/{{ ksk_facts.stdout }}.private'
    group: bind
    mode: g+r

- name: Allow queries to the DNS server
  ufw:
    from_ip: any
    to_ip: any
    proto: udp
    to_port: 53
    comment: 'Allow DNS queries'
    rule: allow

- name: Allow DNS zones transfer
  ufw:
    from_ip: any
    to_ip: any
    proto: tcp
    to_port: 53
    comment: 'Allow DNS zone transfers'
    rule: allow

- name: Link DNS entries in /var/cache/bin
  when: keys_dir.changed
  file:
    src: '/etc/bind/{{ file }}'
    dest: '/var/cache/bind/{{ file }}'
    state: link
  with_items:
    - 'forward.{{ network.domain }}'
    - 'reverse.{{ network.domain }}'
  loop_control:
    loop_var: file

- name: Restart bind
  when: keys_dir.changed
  service:
    name: bind9
    state: restarted

- name: Backup the keys on your local machine
  tags: backup-pull
  synchronize:
    mode: pull
    src: '/etc/bind/keys/{{ item }}'
    dest: '{{ playbook_dir }}/../../backup/dnssec-keys/'
    perms: yes
    rsync_opts:
      - '--no-motd'
      - '--exclude=readme.md'
      - '--update'
  with_items:
    - '*.key'
    - '*.private'
